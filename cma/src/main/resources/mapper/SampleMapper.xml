<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cma.dao.SampleMapper">
  <resultMap id="BaseResultMap" type="com.cma.pojo.Sample">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="sampleId" />
    <result column="sample_number" jdbcType="VARCHAR" property="sampleNumber" />
    <result column="sample_name" jdbcType="VARCHAR" property="sampleName" />
    <result column="sample_amount" jdbcType="TINYINT" property="sampleAmount" />
    <result column="sample_state" jdbcType="TINYINT" property="sampleState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, sample_number, sample_name, sample_amount, sample_state
  </sql>
  <select id="selectByExample" parameterType="com.cma.dao.example.SampleExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sample
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cma.dao.example.SampleExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from sample
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.cma.dao.example.SampleExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from sample
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update sample
    <set>
      <if test="record.sampleId != null">
        id = #{record.sampleId,jdbcType=BIGINT},
      </if>
      <if test="record.sampleNumber != null">
        sample_number = #{record.sampleNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.sampleName != null">
        sample_name = #{record.sampleName,jdbcType=VARCHAR},
      </if>
      <if test="record.sampleAmount != null">
        sample_amount = #{record.sampleAmount,jdbcType=TINYINT},
      </if>
      <if test="record.sampleState != null">
        sample_state = #{record.sampleState,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update sample
    set id = #{record.sampleId,jdbcType=BIGINT},
      sample_number = #{record.sampleNumber,jdbcType=VARCHAR},
      sample_name = #{record.sampleName,jdbcType=VARCHAR},
      sample_amount = #{record.sampleAmount,jdbcType=TINYINT},
      sample_state = #{record.sampleState,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <!-- 
  <insert id="addOneWithPK" parameterType="com.cma.pojo.Sample" resultType="java.lang.Integer" useGeneratedKeys="true" keyProperty="id">
      insert into sample(sample_name, sample_number, sample_state, sample_amount) values(#{sampleName}, #{sampleNumber}, #{sampleState}, #{sampleAmount})
  </insert> 
  
  <insert id="addOneWithPK" parameterType="com.cma.pojo.Sample">
        <selectKey keyProperty="id" resultType="int" order="AFTER">
          SELECT LAST_INSERT_ID()
        </selectKey>
          insert into sample(sample_name, sample_number, sample_state, sample_amount) values(#{sampleName}, #{sampleNumber}, #{sampleState}, #{sampleAmount})
    </insert>-->
</mapper>